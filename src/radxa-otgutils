#!/bin/bash -e

configfs_init()
{
    modprobe libcomposite

    mkdir -p "/sys/kernel/config/usb_gadget/radxa-otgutils${1}"
    pushd "/sys/kernel/config/usb_gadget/radxa-otgutils${1}"

    echo "0x1d6b" > "idVendor"  # Linux Foundation
    echo "0x0104" > "idProduct" # Multifunction Composite Gadget
    echo "0x0100" > "bcdDevice" # v1.0.0
    echo "0x0200" > "bcdUSB"    # USB 2.0
    echo "0xEF" > "bDeviceClass"
    echo "0x02" > "bDeviceSubClass"
    echo "0x01" > "bDeviceProtocol"

    mkdir -p "strings/0x409"
    echo "0123456789ABCDE$1" > "strings/0x409/serialnumber"
    echo "Radxa" > "strings/0x409/manufacturer"
    echo "OTG Utils" > "strings/0x409/product"

    mkdir -p "configs/r.1/strings/0x409"
    echo "500" > "configs/r.1/MaxPower"
    echo "adb$1" > "configs/r.1/strings/0x409/configuration"

    popd
}

function_init()
{   
    case "$MODE" in
        adbd)
            local GADGET="ffs.adb$1"
            ;;
        usbnet)
            local GADGET="ecm.usb$1"
            ;;
    esac
   
    if [ ! -e "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/functions/$GADGET" ];
    then
        mkdir -p "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/functions/$GADGET"
    fi

    if [ ! -e "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/configs/r.1/$GADGET" ];
    then
        ln -s "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/functions/$GADGET" "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/configs/r.1/$GADGET"
    fi
}

function_stop()
{
    case "$MODE" in
        adbd)
            local GADGET="ffs.adb$1"
            ;;
        usbnet)
            local GADGET="ecm.usb$1"
            ;;
    esac

    if [ -e "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/configs/r.1/$GADGET" ];
    then
        rm "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/configs/r.1/$GADGET"
    fi

    if [ -e "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/functions/$GADGET" ];
    then
        rmdir "/sys/kernel/config/usb_gadget/radxa-otgutils${1}/functions/$GADGET"
    fi
}

mount_adb()
{
    # 只支持一个adb设备,固定设置为adb1 
    if [ ! -e "/dev/usb-ffs/adb" ] ;
    then
        mkdir -p /dev/usb-ffs/adb
        mount -o uid=2000,gid=2000 -t functionfs adb1 /dev/usb-ffs/adb
    fi
    export service_adb_tcp_port=5555
    start-stop-daemon --start --oknodo --pidfile /var/run/adbd.pid --startas /usr/bin/adbd --background
    sleep 1
}

umount_adb()
{
    start-stop-daemon --stop --oknodo --pidfile /var/run/adbd.pid --retry 5
    umount /dev/usb-ffs/adb
    rmdir /dev/usb-ffs/adb
    rmdir /dev/usb-ffs
}

start()
{
    local NUM=$(find /sys/class/udc -maxdepth 1 -mindepth 1 | wc -l )
    echo "number of device is $NUM"

    if [ $NUM -eq 0 ]; then
        echo "no otg device!"
        exit 1
    fi

    for ((i=1; i<=$NUM; i++))
    do
  	    echo "Init device $i"
        configfs_init $i
        function_init $i
        case "$MODE" in
            adbd)
                mount_adb $i
                ;;
        esac
    done
    
    local UDC=
    for ((i=1; i<=$NUM; i++))
    do
        echo "echo device$i to UDC"
        UDC="$(basename "$(find /sys/class/udc -maxdepth 1 -mindepth 1 | sort | sed -n '1p')")"
        echo "$UDC" > "/sys/kernel/config/usb_gadget/radxa-otgutils$i/UDC" || true
    done
}

stop()
{
    function_stop
    case "$MODE" in
        adbd)
            umount_adb
            ;;
    esac
}

MODE=
case "$1" in
    adbd|usbnet)
        MODE="$1"
        ;;
    *)
        echo "Unknown mode. Valid values are adbd or usbnet."
        exit 1
        ;;
esac

case "$2" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|reload)
        stop
        start
        ;;
*)
    echo "Usage: $0 <adbd|usbnet> <start|stop|restart>"
    exit 1
esac

exit 0
